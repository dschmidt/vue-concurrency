declare function E(n: any, e: any): any;
declare function b(n: any): void;
declare function w(n: any): Promise<any>;
declare function R(n: any): any;
declare function j(): any;
declare function O(n: any): any;
declare function T(n: any, e: any): void;
declare function k(): any;
declare function C(e: any, r: any): any;
declare function L(r: any): any;
declare function S(n: any, e: any): any;
declare function l(n: any): Promise<any>;
export { E as getCancelToken, b as printTask, w as timeout, R as useAsyncTask, j as useParallelTask, O as usePipeTask, T as useSSRPersistance, k as useSequentialTask, C as useTask, L as useTaskGroup, S as useTaskPrefetch, l as waitForValue };
